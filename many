#!/bin/bash

function usage() {
    echo "Usage: $0 [-c] [-n times] -- command"
    echo "   -c: count number of failures"
    echo " e.g.: $0 -n 5 -- mvn clean test"
    echo "   or: $0 -c -n 5 -- mvn clean test"
}

count=false
finished=''
times=1
while [[ $# > 1 ]] && [[ -z $finished ]]
do
    key="$1"

    case $key in
        --)
            finished=true
            ;;
        -n)
            times="$2"
            ;;
        -c)
            count=true
            ;;
    esac
    shift # past argument or value
done

if [[ -z "$@" ]] || [[ -z "$finished" ]] ; then
    usage
    exit 1
fi

# run the command however many times it was requested
function fail_first() {
i=0
command="$@"
while [[ $i -lt $times ]] ; do
    i=$((i + 1))
    sh -x -c "$command"
    result=$?
    if [ $result != 0 ] ; then
        echo "FATAL: Failed on iteration $i"
        exit $result
    fi
done
}
function count_failures() {
i=0
num_failures=0
command="$@"
while [[ $i -lt $times ]] ; do
    i=$((i + 1))
    sh -x -c "$command"
    result=$?
    if [ $result != 0 ] ; then
        num_failures=$((num_failures + 1))
    fi
done
echo "Number of failures of total: $num_failures of $times"
}

if [[ "$count" == true ]] ; then
    echo "Counting failures"
    count_failures "$@"
else
    fail_first "$@"
fi
